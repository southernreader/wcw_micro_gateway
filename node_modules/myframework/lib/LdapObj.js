var ldap = require('ldapjs');

module.exports = LdapObj;

function LdapObj(options) {	
	this.ldapclient = ldap.createClient({
		url: options.url
	});
}

LdapObj.prototype.authenticate = function (rootuser,myuser, callback) {	
	var ldapclient = this.ldapclient;
		
	ldapclient.bind(rootuser.username, rootuser.password, function(err) {
		var data = {};
		var present = false;
		if (err) {
			 console.log("Error in binding itself");
		  }
		else {
			ldapclient.search(myuser.root, myuser.opts, function(err, sres) {   
				
				  sres.on('error', function(err) {
					    console.error('error: ' + err.message);
					  })
					  
				  sres.on('searchEntry', function(entry) {					
					data.role = entry.object.employeeType;
					data.siteid = entry.object.uid;
					present = true;
				  });
				  
				  sres.on('end', function(result) {
					  if(present){
						  callback(null,data);
					  }
					  else{
						  callback(null,null);
					  }
				  });				  
				});
		  }           
	});
};




